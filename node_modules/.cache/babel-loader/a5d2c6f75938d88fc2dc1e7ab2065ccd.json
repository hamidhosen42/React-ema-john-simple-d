{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming_hero\\\\Milestone 8-Simple React\\\\Module 49-(Advanced) Cart calculation, Save and Retrieve cart\\\\react-ema-sohn-simple\\\\src\\\\Component\\\\Shop\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { addToDb, getStoredCart } from \"../../utilities/fakedb\";\nimport Cart from \"../Cart/Cart\";\nimport Product from \"../Product/Product\";\nimport \"./Shop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    fetch(\"products.json\").then(res => res.json()).then(data => setProducts(data));\n  }, []);\n\n  const handleAddToCart = selectedProduct => {\n    // console.log(product);\n    // do not do this cart.push(selectedProduct);\n    let newCart = [];\n    const exists = cart.find(product => product.id === selectedProduct.id);\n\n    if (!exists) {\n      selectedProduct.quantity = 1;\n      newCart = [...cart, selectedProduct];\n    } else {\n      const rest = cart.filter(product => product.id !== selectedProduct.id);\n    }\n\n    setCart(newCart);\n    addToDb(selectedProduct.id);\n  };\n\n  useEffect(() => {\n    const storedCart = getStoredCart();\n    const saveCart = [];\n\n    for (const id in storedCart) {\n      // console.log(id);\n      const addedProdut = products.find(product => product.id === id);\n\n      if (addedProdut) {\n        const quantity = storedCart[id];\n        addedProdut.quantity = quantity;\n        saveCart.push(addedProdut);\n      }\n    }\n\n    setCart(saveCart);\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"shop-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-container\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product,\n        handleAddToCart: handleAddToCart\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: /*#__PURE__*/_jsxDEV(Cart, {\n        cart: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Shop, \"waJxpn7apoUOnlvksXqxWAZTtGw=\");\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["D:/programming_hero/Milestone 8-Simple React/Module 49-(Advanced) Cart calculation, Save and Retrieve cart/react-ema-sohn-simple/src/Component/Shop/Shop.js"],"names":["React","useEffect","useState","addToDb","getStoredCart","Cart","Product","Shop","products","setProducts","cart","setCart","fetch","then","res","json","data","handleAddToCart","selectedProduct","newCart","exists","find","product","id","quantity","rest","filter","storedCart","saveCart","addedProdut","push","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,wBAAvC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,eAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUP,WAAW,CAACO,IAAD,CAF7B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,eAAe,GAAIC,eAAD,IAAqB;AAC3C;AACA;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,UAAMC,MAAM,GAAGV,IAAI,CAACW,IAAL,CAAWC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,eAAe,CAACK,EAAtD,CAAf;;AAEA,QAAI,CAACH,MAAL,EAAa;AACXF,MAAAA,eAAe,CAACM,QAAhB,GAA2B,CAA3B;AACAL,MAAAA,OAAO,GAAG,CAAC,GAAGT,IAAJ,EAAUQ,eAAV,CAAV;AACD,KAHD,MAGO;AACL,YAAMO,IAAI,GAAGf,IAAI,CAACgB,MAAL,CAAaJ,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,eAAe,CAACK,EAAxD,CAAb;AAED;;AACDZ,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACAhB,IAAAA,OAAO,CAACe,eAAe,CAACK,EAAjB,CAAP;AACD,GAfD;;AAiBAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,UAAU,GAAGvB,aAAa,EAAhC;AACA,UAAMwB,QAAQ,GAAG,EAAjB;;AAEA,SAAK,MAAML,EAAX,IAAiBI,UAAjB,EAA6B;AAC3B;AACA,YAAME,WAAW,GAAGrB,QAAQ,CAACa,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeA,EAA1C,CAApB;;AACA,UAAIM,WAAJ,EAAiB;AACf,cAAML,QAAQ,GAAGG,UAAU,CAACJ,EAAD,CAA3B;AACAM,QAAAA,WAAW,CAACL,QAAZ,GAAuBA,QAAvB;AACAI,QAAAA,QAAQ,CAACE,IAAT,CAAcD,WAAd;AACD;AACF;;AACDlB,IAAAA,OAAO,CAACiB,QAAD,CAAP;AACD,GAdQ,EAcN,CAACpB,QAAD,CAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACGA,QAAQ,CAACuB,GAAT,CAAcT,OAAD,iBACZ,QAAC,OAAD;AAEE,QAAA,OAAO,EAAEA,OAFX;AAGE,QAAA,eAAe,EAAEL;AAHnB,SACOK,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEb;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3DD;;GAAMH,I;;KAAAA,I;AA6DN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { addToDb, getStoredCart } from \"../../utilities/fakedb\";\r\nimport Cart from \"../Cart/Cart\";\r\nimport Product from \"../Product/Product\";\r\nimport \"./Shop.css\";\r\n\r\nconst Shop = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"products.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => setProducts(data));\r\n  }, []);\r\n\r\n  const handleAddToCart = (selectedProduct) => {\r\n    // console.log(product);\r\n    // do not do this cart.push(selectedProduct);\r\n    let newCart = [];\r\n    const exists = cart.find((product) => product.id === selectedProduct.id);\r\n\r\n    if (!exists) {\r\n      selectedProduct.quantity = 1;\r\n      newCart = [...cart, selectedProduct];\r\n    } else {\r\n      const rest = cart.filter((product) => product.id !== selectedProduct.id);\r\n      \r\n    }\r\n    setCart(newCart);\r\n    addToDb(selectedProduct.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedCart = getStoredCart();\r\n    const saveCart = [];\r\n\r\n    for (const id in storedCart) {\r\n      // console.log(id);\r\n      const addedProdut = products.find((product) => product.id === id);\r\n      if (addedProdut) {\r\n        const quantity = storedCart[id];\r\n        addedProdut.quantity = quantity;\r\n        saveCart.push(addedProdut);\r\n      }\r\n    }\r\n    setCart(saveCart);\r\n  }, [products]);\r\n\r\n  return (\r\n    <div class=\"shop-container\">\r\n      <div className=\"products-container\">\r\n        {products.map((product) => (\r\n          <Product\r\n            key={product.id}\r\n            product={product}\r\n            handleAddToCart={handleAddToCart}\r\n          ></Product>\r\n        ))}\r\n      </div>\r\n      <div className=\"cart-container\">\r\n        <Cart cart={cart}></Cart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;"]},"metadata":{},"sourceType":"module"}